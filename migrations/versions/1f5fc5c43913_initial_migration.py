"""Initial Migration

Revision ID: 1f5fc5c43913
Revises: 
Create Date: 2024-10-06 14:51:47.555984

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f5fc5c43913'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('_password_hash', sa.String(length=128), nullable=False),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('membership_renewal_status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('schools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_name', sa.String(length=100), nullable=False),
    sa.Column('county', sa.String(length=50), nullable=False),
    sa.Column('headteacher_name', sa.String(length=100), nullable=True),
    sa.Column('school_type', sa.String(length=20), nullable=True),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('guide_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['guide_id'], ['users.id'], name=op.f('fk_schools_guide_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_name', sa.String(length=50), nullable=False),
    sa.Column('min_age', sa.Integer(), nullable=False),
    sa.Column('max_age', sa.Integer(), nullable=False),
    sa.Column('guide_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['guide_id'], ['users.id'], name=op.f('fk_units_guide_id_users')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_name', sa.String(length=100), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_events_school_id_schools')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('total_membership_fees_collected', sa.Float(), nullable=True),
    sa.Column('report_date', sa.Date(), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_reports_school_id_schools')),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], name=op.f('fk_reports_unit_id_units')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=True),
    sa.Column('guide_leader_id', sa.Integer(), nullable=True),
    sa.Column('membership_status', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['guide_leader_id'], ['users.id'], name=op.f('fk_students_guide_leader_id_users')),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], name=op.f('fk_students_school_id_schools')),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], name=op.f('fk_students_unit_id_units')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('age_transition_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('from_unit', sa.String(length=50), nullable=True),
    sa.Column('to_unit', sa.String(length=50), nullable=True),
    sa.Column('notification_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_age_transition_notifications_student_id_students')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment_reminders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('reminder_date', sa.Date(), nullable=True),
    sa.Column('reminder_type', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_payment_reminders_student_id_students')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('payment_date', sa.Date(), nullable=True),
    sa.Column('payment_method', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_payments_student_id_students')),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_events',
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], name=op.f('fk_student_events_event_id_events')),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name=op.f('fk_student_events_student_id_students')),
    sa.PrimaryKeyConstraint('student_id', 'event_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_events')
    op.drop_table('payments')
    op.drop_table('payment_reminders')
    op.drop_table('age_transition_notifications')
    op.drop_table('students')
    op.drop_table('reports')
    op.drop_table('events')
    op.drop_table('units')
    op.drop_table('schools')
    op.drop_table('users')
    # ### end Alembic commands ###
